Check my blog for full documentation about VIM and how to setup it up.

http://haridas.in/vim-as-your-ide.html

--------------------------------------------------
Setup Vim from Scratch

All required packages are there in my Vim github project. I put all those settings and plugins in standard way. So you can extend or remove them when ever required.

Before doing this, please take a backup of your current Vim settings from your home directory.

We can start the installation by picking my Git Repository,

  git clone git://github.com/haridas/Dotfiles.git
  cd Dotfiles

I kept all the required plugins as git submodules. So we will get the new changes from the plugin projects by updating the submodule project. While cloning my main repo, it won't retrieve the submodules or external plugin git projects. But we have all the settings and paths in my git projects itself. So we can easily fetch the current stable code from all the external projects. To do that, type below commands inside your Dotfiles folder.

  pwd
  <path to gitproject>/Dotfiles

  git submodule init
  git submodule update

Now you have all the files required to get start with Vim, Next thing is to link my git files as your vim files. To do that just create soft link of the Vim system files and then point it to my git repository files. Here is the steps.

  cd
  ln -s <path-to>Dotfiles/vim-files/vim .vim
  ln -s <path-to>Dotfiles/vim-files/vim/vimrc .vimrc

Thats it, now open your vim, you can see all the features described above are being available, except command-t. Because it requires a compilation. The compilation step is very simple. Follow me,

  cd <path-to>Dotfiles/vim-files/vim/bundle/command-t/ruby/command-t
  ruby extconf.rb
  make

The make will succeed only when you have gcc installed , and your Vim has ruby support. To check the ruby support, open your vim and type,

  :ruby 1

If there is no error then you have ruby support with your vim. The latest version of Vim has support for major dynamic languages like Python, Ruby and others. So that it won't give you any head ache.

If the dynamic language support is not there with your Vim, then you have to install complete vim from your package manager.

If you are using Debian based system you can follow this command. Other platforms has also the same option using their package manager tool.

  apt-cache search python | grep vim
  apt-cache search ruby | grep vim
From the list install any of the GUI based package.
